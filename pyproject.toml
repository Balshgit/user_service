[tool.poetry]
name = "user_service"
version = "1.0.0"
description = "User service example"
authors = [
    "SamWarden <SamWardenSad@gmail.com>",
]
maintainers = [
    "SamWarden <SamWardenSad@gmail.com>",
]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/SamWarden/user_service"
repository = "https://github.com/SamWarden/user_service"

[tool.poetry.dependencies]
python = "^3.11"
sqlalchemy = "^2.0.15"
structlog = "^23.1.0"
fastapi = "^0.103.2"
orjson = "^3.9.0"
alembic = "^1.11.1"
rich = "^13.4.1"
asyncpg = "^0.28.0"
uvicorn = "^0.23.2"
didiator = {version = "^0.3.1", extras = ["di"]}
uuid6 = "^2023.5.2"
aio-pika = "^9.1.2"
uvloop = "^0.18.0"
adaptix = "^3.0.0a3"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.3.2"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "^7.3.1"
pytest-asyncio = "^0.20.3"
testcontainers = {version = "^3.7.1", extras = ["postgresql"]}
pytest-order = "^1.1.0"

[tool.poetry.group.lint]
optional = true

[tool.poetry.group.lint.dependencies]
pylint = "^2.17.4"
mypy = "^1.3.0"
flake8 = "^6.0.0"
isort = "^5.12.0"
black = "^23.3.0"

[tool.black]
line-length = 120
target-version = ["py311"]
include_trailing_comma = true
exclude = '''
(
    \.eggs
  | \.git
  | build
  | dist
  | venv
  | docs
)
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 120
include_trailing_comma = true
combine_as_imports = true
remove_redundant_aliases = true

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
