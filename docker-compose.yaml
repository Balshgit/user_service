version: "3.9"

services:
  postgres:
    container_name: user_service.postgres
    image: "postgres:15-alpine"
    restart: unless-stopped
    expose:
      - "5432"
    ports:
      - "127.0.0.1:15432:5432"
    networks:
      - user_service.postgres.network
    environment:
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_USER: ${POSTGRES_USER:-$USER}
      POSTGRES_DB: ${POSTGRES_DB:-$USER}
    volumes:
      - "user_service.postgres.data:/var/lib/postgresql/users:rw"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 60s
      retries: 5
      start_period: 10s

  postgres_migration:
    container_name: user_service.postgres_migration
    build:
      context: .
    restart: "on-failure"
    depends_on:
      postgres:
        condition: service_healthy
    env_file: .env
    networks:
      - user_service.postgres.network
    volumes:
      - "./config.toml:/app/config.toml"
      - "./src/infrastructure/db/migrations:/app/src/infrastructure/db/migrations"
    command: ["python", "-m", "alembic", "upgrade", "head"]

  rabbitmq:
    image: rabbitmq:3.11-management-alpine
    container_name: user_service.rabbitmq
    hostname: user_service.rabbitmq
    restart: unless-stopped
    expose:
      - "5672"
    ports:
      # AMQP protocol port
      - "127.0.0.1:5672:5672"
      # HTTP management UI
      - "127.0.0.1:15672:15672"
    networks:
      - user_service.rabbitmq.network
    volumes:
      - user_service.rabbitmq.data:/var/lib/rabbitmq/
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER:-admin}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD:-admin}

volumes:
  user_service.postgres.data: {}
  user_service.rabbitmq.data: {}

networks:
  user_service.postgres.network: {}
  user_service.rabbitmq.network: {}
#  reverse-proxy:
#    external:
#      name: nginx-reverse-proxy
